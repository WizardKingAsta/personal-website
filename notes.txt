Worked on a 3 person team to make a web app that displays crowd in our university gyms using live user input as data for the crowd meter. We created an interface to take in user input for what their perceieved crowd level at the gym is, we also deleted data that was older than 15 minutes old to keep meter fresh and accurate. We used python for the back and front end, utilized Streamlit API for the webpage and user input, and we launched online with AWS. I learned how to use python and AWS for this, and was able to experience working on a team for a real world project. Our efforts won us the health track for the 2023 Rutgers Hackathon.

Implemented a Huffman coding algorithm to compress text files, achieving up to 50% reduction in file size. Used a priority queue (min-heap) to build a binary tree, reducing time complexity for tree construction to O(nlogn). Assigned binary codes to 256 unique characters based on their frequencies, optimizing for space efficiency. Encoded text into binary format, reducing the average character representation length from 8 bits to as low as 3 bits for the most frequent characters. 
